@implements IDisposable

<MudDialog @bind-Visible="_visible" Options="_dialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">Oops, unexpected error occured!</MudText>
    </TitleContent>
    <DialogContent>
        @foreach (var Error in Exceptions)
        {
            <MudAlert Severity="Severity.Error">@Error.Message</MudAlert>
        }
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="OnHandle" Class="px-10">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    List<Exception> Exceptions = new List<Exception>();

    private bool _visible;
    private readonly DialogOptions _dialogOptions = new() { FullWidth = true };

    protected override void OnInitialized()
    {
        ErrorNotificaitonService.OnExceptionListChange += ErrorNotificaitonService_OnError;
    }

    private void ErrorNotificaitonService_OnError()
    {
        Exceptions = ErrorNotificaitonService.GetExceptions();
        _visible = true;
        StateHasChanged();
    }

    private void OnHandle()
    {
        Exceptions = new List<Exception>();
        _visible = false;
        StateHasChanged();
    }

    public void Dispose()
    {
        ErrorNotificaitonService.OnExceptionListChange -= ErrorNotificaitonService_OnError;
    }
}
